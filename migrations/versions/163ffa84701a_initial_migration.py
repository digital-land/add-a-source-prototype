"""initial migration

Revision ID: 163ffa84701a
Revises:
Create Date: 2022-02-24 13:29:29.016777

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "163ffa84701a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "collection",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("collection", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("collection"),
    )
    op.create_table(
        "endpoint",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("endpoint", sa.Text(), nullable=False),
        sa.Column("endpoint_url", sa.Text(), nullable=True),
        sa.Column("parameters", sa.Text(), nullable=True),
        sa.Column("plugin", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("endpoint"),
    )
    op.create_table(
        "organisation",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("organisation", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("official_name", sa.Text(), nullable=True),
        sa.Column("addressbase_custodian", sa.Text(), nullable=True),
        sa.Column("billing_authority", sa.Text(), nullable=True),
        sa.Column("census_area", sa.Text(), nullable=True),
        sa.Column("combined_authority", sa.Text(), nullable=True),
        sa.Column("company", sa.Text(), nullable=True),
        sa.Column("entity", sa.BigInteger(), nullable=True),
        sa.Column("esd_inventory", sa.Text(), nullable=True),
        sa.Column("local_authority_type", sa.Text(), nullable=True),
        sa.Column("local_resilience_forum", sa.Text(), nullable=True),
        sa.Column("opendatacommunities_area", sa.Text(), nullable=True),
        sa.Column("opendatacommunities_organisation", sa.Text(), nullable=True),
        sa.Column("region", sa.Text(), nullable=True),
        sa.Column("shielding_hub", sa.Text(), nullable=True),
        sa.Column("statistical_geography", sa.Text(), nullable=True),
        sa.Column("twitter", sa.Text(), nullable=True),
        sa.Column("website", sa.Text(), nullable=True),
        sa.Column("wikidata", sa.Text(), nullable=True),
        sa.Column("wikipedia", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("organisation"),
    )
    op.create_table(
        "resource",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("resource", sa.Text(), nullable=False),
        sa.Column("mime_type", sa.Text(), nullable=True),
        sa.Column("bytes", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("resource"),
    )
    op.create_table(
        "typology",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("typology", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("plural", sa.Text(), nullable=True),
        sa.Column("wikidata", sa.Text(), nullable=True),
        sa.Column("wikipedia", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("typology"),
    )
    op.create_table(
        "dataset",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("dataset", sa.Text(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("key_field", sa.Text(), nullable=True),
        sa.Column("entity_minimum", sa.BigInteger(), nullable=True),
        sa.Column("entity_maximum", sa.BigInteger(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column(
            "paint_options", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("plural", sa.Text(), nullable=True),
        sa.Column("prefix", sa.Text(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("wikidata", sa.Text(), nullable=True),
        sa.Column("wikipedia", sa.Text(), nullable=True),
        sa.Column("collection", sa.Text(), nullable=True),
        sa.Column("typology", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["collection"],
            ["collection.collection"],
        ),
        sa.ForeignKeyConstraint(
            ["typology"],
            ["typology.typology"],
        ),
        sa.PrimaryKeyConstraint("dataset"),
    )
    op.create_table(
        "resource_endpoint",
        sa.Column("endpoint", sa.Text(), nullable=False),
        sa.Column("resource", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["endpoint"],
            ["endpoint.endpoint"],
        ),
        sa.ForeignKeyConstraint(
            ["resource"],
            ["resource.resource"],
        ),
        sa.PrimaryKeyConstraint("endpoint", "resource"),
    )
    op.create_table(
        "source",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("source", sa.Text(), nullable=False),
        sa.Column("documentation_url", sa.Text(), nullable=True),
        sa.Column("attribution", sa.Text(), nullable=True),
        sa.Column("licence", sa.Text(), nullable=True),
        sa.Column("endpoint_id", sa.Text(), nullable=True),
        sa.Column("organisation_id", sa.Text(), nullable=True),
        sa.Column("collection_id", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["collection_id"],
            ["collection.collection"],
        ),
        sa.ForeignKeyConstraint(
            ["endpoint_id"],
            ["endpoint.endpoint"],
        ),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["organisation.organisation"],
        ),
        sa.PrimaryKeyConstraint("source"),
    )
    op.create_table(
        "source_dataset",
        sa.Column("source", sa.Text(), nullable=False),
        sa.Column("dataset", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset"],
            ["dataset.dataset"],
        ),
        sa.ForeignKeyConstraint(
            ["source"],
            ["source.source"],
        ),
        sa.PrimaryKeyConstraint("source", "dataset"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("source_dataset")
    op.drop_table("source")
    op.drop_table("resource_endpoint")
    op.drop_table("dataset")
    op.drop_table("typology")
    op.drop_table("resource")
    op.drop_table("organisation")
    op.drop_table("endpoint")
    op.drop_table("collection")
    # ### end Alembic commands ###
